
package cancion;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Scanner;

// Clase Cancion
class Cancion {
    String titulo;
    String artista;
    String genero;
    String region;
    int anio;

    public Cancion(String titulo, String artista, String genero, String region, int anio) {
        this.titulo = titulo;
        this.artista = artista;
        this.genero = genero;
        this.region = region;
        this.anio = anio;
    }

    @Override
    public String toString() {
        return """
               
               --- Detalles de la Cancion ---
               üéµ T√≠tulo: """ + titulo + "\n" +
               "üé§ Artista: " + artista + "\n" +
               "üß¨ G√©nero: " + genero + "\n" +
               "üåç Regi√≥n: " + region + "\n" +
               "üóì A√±o: " + anio + "\n" +
               "----------------------------\n";
    }
}

public class CatalogoMusicalHash {

    private final Map<String, Cancion> catalogoPorTitulo;
    private final Map<String, List<Cancion>> indicePorArtista;
    private final Map<String, List<Cancion>> indicePorGenero;
    private final Map<String, List<Cancion>> indicePorRegion;
    private final Scanner scanner;

    public CatalogoMusicalHash() {
        this.catalogoPorTitulo = new HashMap<>();
        this.indicePorArtista = new HashMap<>();
        this.indicePorGenero = new HashMap<>();
        this.indicePorRegion = new HashMap<>();
        this.scanner = new Scanner(System.in);
        cargarCancionesIniciales(); 
    }

    // --------------------------- Carga Inicial --------------------------------------
    private void cargarCancionesIniciales() {
        Cancion[] canciones = {
            new Cancion("De M√∫sica Ligera", "Soda Stereo", "Rock", "Latinoamerica", 1990),
            new Cancion("Persiana Americana", "Soda Stereo", "Rock", "Latinoamerica", 1986),
            new Cancion("Lamento Boliviano", "Enanitos Verdes", "Rock", "Latinoamerica", 1994),
            new Cancion("Cuando Seas Grande", "Miguel Mateos", "Pop Rock", "Argentina", 1986),
            new Cancion("Sweet Child O' Mine", "Guns N' Roses", "Hard Rock", "Estados Unidos", 1987),
            new Cancion("Despacito", "Luis Fonsi", "Pop Latino", "Puerto Rico", 2017),
            new Cancion("Gasolina", "Daddy Yankee", "Reggaeton", "Puerto Rico", 2004),
            new Cancion("La Camisa Negra", "Juanes", "Pop Latino", "Colombia", 2004),
            new Cancion("Vivir Mi Vida", "Marc Anthony", "Salsa", "Puerto Rico", 2013),
            new Cancion("Danza Kuduro", "Don Omar", "Reggaeton", "Puerto Rico", 2010),
            new Cancion("El Triste", "Jos√© Jos√©", "Balada", "Mexico", 1970),
            new Cancion("Burbujas de Amor", "Juan Luis Guerra", "Bachata", "Caribe", 1990),
            new Cancion("Ojal√° Que Llueva Caf√©", "Juan Luis Guerra", "Merengue", "Caribe", 1989),
            new Cancion("Sabor a M√≠", "Luis Miguel", "Bolero", "Mexico", 1997),
            new Cancion("Procuro Olvidarte", "Hernaldo Zuniga", "Balada", "Nicaragua", 1980),
            new Cancion("Levels", "Avicii", "House", "Europa", 2011),
            new Cancion("Titanium", "David Guetta", "Dance Pop", "Europa", 2011),
            new Cancion("September", "Earth, Wind & Fire", "Funk", "Estados Unidos", 1978),
            new Cancion("Billie Jean", "Michael Jackson", "Pop", "Estados Unidos", 1982),
            new Cancion("One", "U2", "Rock", "Europa", 1991)
        };

        for (Cancion c : canciones) {
            indexarCancion(c);
        }
        System.out.println("üé∂ Cat√°logo inicial cargado con " + canciones.length + " canciones.");
    }

    // --------------------------- Indexaci√≥n --------------------------------------
    private void indexarCancion(Cancion cancion) {
        catalogoPorTitulo.put(cancion.titulo, cancion);
        indicePorArtista.computeIfAbsent(cancion.artista, k -> new ArrayList<>()).add(cancion);
        indicePorGenero.computeIfAbsent(cancion.genero, k -> new ArrayList<>()).add(cancion);
        indicePorRegion.computeIfAbsent(cancion.region, k -> new ArrayList<>()).add(cancion);
    }

    // --------------------------- Nueva funci√≥n: Eliminar Canci√≥n --------------------------
    public void eliminarCancion() {
        if (catalogoPorTitulo.isEmpty()) {
            System.out.println("\nüö´ El catalogo est√° vac√≠o.");
            return;
        }

        System.out.print("\nIngrese el TiTULO EXACTO de la canci√≥n que desea eliminar: ");
        String tituloEliminar = scanner.nextLine().trim();

        Cancion cancion = catalogoPorTitulo.remove(tituloEliminar);

        if (cancion != null) {
            // Tambi√©n eliminar de los √≠ndices secundarios
            indicePorArtista.get(cancion.artista).remove(cancion);
            indicePorGenero.get(cancion.genero).remove(cancion);
            indicePorRegion.get(cancion.region).remove(cancion);

            System.out.println("üóëÔ∏è Canci√≥n '" + tituloEliminar + "' eliminada correctamente del cat√°logo.");
        } else {
            System.out.println("‚ùå No se encontr√≥ la canci√≥n '" + tituloEliminar + "'.");
        }
    }

    // --------------------------- Ingreso de Canci√≥n --------------------------
    public void ingresarCancion() {
        System.out.println("\n--- Ingresar Nueva Canci√≥n ---");
        System.out.print("T√≠tulo: ");
        String titulo = scanner.nextLine().trim();

        if (catalogoPorTitulo.containsKey(titulo)) {
            System.out.println("‚ö†Ô∏è Error: La canci√≥n '" + titulo + "' ya existe en el cat√°logo.");
            return;
        }

        System.out.print("Artista: ");
        String artista = scanner.nextLine().trim();
        System.out.print("Genero: ");
        String genero = scanner.nextLine().trim();
        System.out.print("Region: ");
        String region = scanner.nextLine().trim();

        int anio = 0;
        boolean anioValido = false;
        while (!anioValido) {
            System.out.print("A√±o: ");
            try {
                anio = Integer.parseInt(scanner.nextLine().trim());
                anioValido = true;
            } catch (NumberFormatException e) {
                System.out.println("‚ö† Entrada no v√°lida. Ingrese un n√∫mero entero para el a√±o.");
            }
        }

        Cancion nuevaCancion = new Cancion(titulo, artista, genero, region, anio);
        indexarCancion(nuevaCancion);
        System.out.println("‚úÖ Canci√≥n '" + titulo + "' agregada al cat√°logo.");
    }

    // --------------------------- B√∫squedas --------------------------
    public void buscarPorTitulo() {
        if (catalogoPorTitulo.isEmpty()) {
            System.out.println("\nüö´ El cat√°logo est√° vac√≠o.");
            return;
        }

        System.out.print("\nIngrese el t√≠tulo exacto: ");
        String tituloBuscado = scanner.nextLine().trim();

        Cancion resultado = catalogoPorTitulo.get(tituloBuscado);

        if (resultado != null) {
            System.out.println("\nüéâ ¬°B√∫squeda exitosa! (Acceso O(1))");
            System.out.println(resultado);
        } else {
            System.out.println("\n‚ùå No se encontr√≥ la canci√≥n '" + tituloBuscado + "'.");
        }
    }

    public void buscarPorCriterio(String tipoBusqueda, Map<String, List<Cancion>> indice) {
        System.out.print("\nIngrese el " + tipoBusqueda + " exacto: ");
        String criterio = scanner.nextLine().trim();

        List<Cancion> resultados = indice.get(criterio);

        if (resultados != null && !resultados.isEmpty()) {
            System.out.println("\nüé∂ Canciones encontradas:");
            for (Cancion c : resultados) {
                System.out.println(c);
            }
        } else {
            System.out.println("\n‚ùå No se encontraron canciones con ese " + tipoBusqueda + ".");
        }
    }

    public void mostrarMenuBusqueda() {
        String opcion;
        do {
            System.out.println("\n--- Men√∫ de B√∫squeda ---");
            System.out.println("1. Buscar por Titulo");
            System.out.println("2. Buscar por Artista");
            System.out.println("3. Buscar por Genero");
            System.out.println("4. Buscar por Region");
            System.out.println("5. Volver al men√∫ principal");
            System.out.print("Seleccione una opci√≥n: ");
            opcion = scanner.nextLine().trim();

            switch (opcion) {
                case "1" -> buscarPorTitulo();
                case "2" -> buscarPorCriterio("Artista", indicePorArtista);
                case "3" -> buscarPorCriterio("Genero", indicePorGenero);
                case "4" -> buscarPorCriterio("Region", indicePorRegion);
                case "5" -> System.out.println("Regresando al men√∫ principal...");
                default -> System.out.println("Opci√≥n no v√°lida.");
            }
        } while (!opcion.equals("5"));
    }

    // --------------------------- Mostrar T√≠tulos --------------------------
    private void mostrarTitulos() {
        if (catalogoPorTitulo.isEmpty()) {
            System.out.println("\nüö´ El cat√°logo est√° vac√≠o.");
            return;
        }
        System.out.println("\n--- T√≠tulos en el Cat√°logo ---");
        catalogoPorTitulo.keySet().forEach(System.out::println);
        System.out.println("----------------------------");
    }

    // --------------------------- Men√∫ Principal --------------------------
    public void ejecutar() {
        String opcion;
        do {
            System.out.println("\n==================================================");
            System.out.println("   ¬°.....MUSICA DJ ANDREX QUE SIGA LA RUMBA.....!");
            System.out.println("==================================================");
            System.out.println("1. Ingresar nueva cancion");
            System.out.println("2. Buscar cancion");
            System.out.println("3. Mostrar todos los titulos");
            System.out.println("4. Eliminar cancion"); // üî• Nueva opci√≥n
            System.out.println("5. Salir");
            System.out.print("Seleccione una opcion: ");
            opcion = scanner.nextLine().trim();

            switch (opcion) {
                case "1" -> ingresarCancion();
                case "2" -> mostrarMenuBusqueda();
                case "3" -> mostrarTitulos();
                case "4" -> eliminarCancion(); // üî• Aqu√≠ se llama
                case "5" -> System.out.println("Cerrando el cat√°logo musical DJ Andrex ¬°Hasta luego!");
                default -> System.out.println("Opci√≥n no v√°lida. Intente nuevamente.");
            }
        } while (!opcion.equals("5"));

        scanner.close();
    }

    // --------------------------- Main --------------------------
    public static void main(String[] args) {
        CatalogoMusicalHash app = new CatalogoMusicalHash();
        app.ejecutar();
    }
}
